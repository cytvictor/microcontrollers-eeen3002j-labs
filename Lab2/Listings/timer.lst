A51 MACRO ASSEMBLER  TIMER                                                                10/26/2018 09:55:47 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\timer.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE Source\timer.s NOMOD51 SET(SMALL) DEBUG PRINT(.\Listings\timer.lst) OBJ
                      ECT(.\Objects\timer.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     ;#include <c8051F020.h>
                +1     2     
                +1     3     
                +1     4     
                +1     5     
                +1     6     
                +1     7     
                +1     8     
                +1     9     
                +1    10     
                +1    11     
                +1    12     
                +1    13     
                +1    14     
                +1    15     
  0080          +1    16     sfr P0       =  0x80;   /* PORT 0                                                  */   
  0081          +1    17     sfr SP       =  0x81;   /* STACK POINTER                                           */
  0082          +1    18     sfr DPL      =  0x82;   /* DATA POINTER - LOW BYTE                                 */
  0083          +1    19     sfr DPH      =  0x83;   /* DATA POINTER - HIGH BYTE                                */
  0084          +1    20     sfr P4       =  0x84;   /* PORT 4                                                          
                                                                                                    */
  0085          +1    21     sfr P5       =  0x85;   /* PORT 5                                                  */
  0086          +1    22     sfr P6       =  0x86;   /* PORT 6                                                          
                                                                                                    */                  
                                                                                                               
  0087          +1    23     sfr PCON     =  0x87;   /* POWER CONTROL                                           */
  0088          +1    24     sfr TCON     =  0x88;   /* TIMER CONTROL                                           */
  0089          +1    25     sfr TMOD     =  0x89;   /* TIMER MODE                                              */
  008A          +1    26     sfr TL0      =  0x8A;   /* TIMER 0 - LOW BYTE                                      */
  008B          +1    27     sfr TL1      =  0x8B;   /* TIMER 1 - LOW BYTE                                      */
  008C          +1    28     sfr TH0      =  0x8C;   /* TIMER 0 - HIGH BYTE                                     */   
  008D          +1    29     sfr TH1      =  0x8D;   /* TIMER 1 - HIGH BYTE                                     */
  008E          +1    30     sfr CKCON    =  0x8E;   /* CLOCK CONTROL                                           */
  008F          +1    31     sfr PSCTL    =  0x8F;   /* PROGRAM STORE R/W CONTROL                               */
  0090          +1    32     sfr P1       =  0x90;   /* PORT 1                                                  */
  0091          +1    33     sfr TMR3CN   =  0x91;   /* TIMER 3 CONTROL                                         */
  0092          +1    34     sfr TMR3RLL  =  0x92;   /* TIMER 3 RELOAD REGISTER - LOW BYTE                      */
  0093          +1    35     sfr TMR3RLH  =  0x93;   /* TIMER 3 RELOAD REGISTER - HIGH BYTE                     */
  0094          +1    36     sfr TMR3L    =  0x94;   /* TIMER 3 - LOW BYTE                                      */
  0095          +1    37     sfr TMR3H    =  0x95;   /* TIMER 3 - HIGH BYTE                                     */
  0096          +1    38     sfr P7           =  0x96;   /* PORT 7                                                  */
  0098          +1    39     sfr SCON0    =  0x98;   /* SERIAL PORT 0 CONTROL                                   */
  0099          +1    40     sfr SBUF0    =  0x99;   /* SERIAL PORT 0 BUFFER                                    */
  009A          +1    41     sfr SPI0CFG  =  0x9A;   /* SERIAL PERIPHERAL INTERFACE 0 CONFIGURATION             */
  009B          +1    42     sfr SPI0DAT  =  0x9B;   /* SERIAL PERIPHERAL INTERFACE 0 DATA                      */
  009C          +1    43     sfr ADC1     =  0x9C;   /* ADC 1 DATA                                              */
  009D          +1    44     sfr SPI0CKR  =  0x9D;   /* SERIAL PERIPHERAL INTERFACE 0 CLOCK RATE CONTROL        */
  009E          +1    45     sfr CPT0CN   =  0x9E;   /* COMPARATOR 0 CONTROL                                    */
  009F          +1    46     sfr CPT1CN   =  0x9F;   /* COMPARATOR 1 CONTROL                                    */
  00A0          +1    47     sfr P2       =  0xA0;   /* PORT 2                                                  */
  00A1          +1    48     sfr EMI0TC   =  0xA1;   /* EMIF TIMING CONTROL                                     */
  00A3          +1    49     sfr EMI0CF   =  0xA3;   /* EXTERNAL MEMORY INTERFACE (EMIF) CONFIGURATION          */
  00A4          +1    50     sfr P0MDOUT  =  0xA4;   /* PORT 0 OUTPUT MODE CONFIGURATION                        */
  00A5          +1    51     sfr P1MDOUT  =  0xA5;   /* PORT 1 OUTPUT MODE CONFIGURATION                        */
  00A6          +1    52     sfr P2MDOUT  =  0xA6;   /* PORT 2 OUTPUT MODE CONFIGURATION                        */
  00A7          +1    53     sfr P3MDOUT  =  0xA7;   /* PORT 3 OUTPUT MODE CONFIGURATION                        */
  00A8          +1    54     sfr IE       =  0xA8;   /* INTERRUPT ENABLE                                        */
A51 MACRO ASSEMBLER  TIMER                                                                10/26/2018 09:55:47 PAGE     2

  00A9          +1    55     sfr SADDR0   =  0xA9;   /* SERIAL PORT 0 SLAVE ADDRESS                             */
  00AA          +1    56     sfr ADC1CN   =  0xAA;   /* ADC 1 CONTROL                                           */
  00AB          +1    57     sfr ADC1CF   =  0xAB;   /* ADC 1 ANALOG MUX CONFIGURATION                          */
  00AC          +1    58     sfr AMX1SL   =  0xAC;   /* ADC 1 ANALOG MUX CHANNEL SELECT                         */
  00AD          +1    59     sfr P3IF     =  0xAD;   /* PORT 3 EXTERNAL INTERRUPT FLAGS                         */
  00AE          +1    60     sfr SADEN1   =  0xAE;   /* SERIAL PORT 1 SLAVE ADDRESS MASK                        */
  00AF          +1    61     sfr EMI0CN   =  0xAF;   /* EXTERNAL MEMORY INTERFACE CONTROL                       */
  00B0          +1    62     sfr P3       =  0xB0;   /* PORT 3                                                  */
  00B1          +1    63     sfr OSCXCN   =  0xB1;   /* EXTERNAL OSCILLATOR CONTROL                             */
  00B2          +1    64     sfr OSCICN   =  0xB2;   /* INTERNAL OSCILLATOR CONTROL                             */
  00B5          +1    65     sfr P74OUT   =  0xB5;   /* PORTS 4 - 7 OUTPUT MODE                                 */
  00B6          +1    66     sfr FLSCL    =  0xB6;   /* FLASH MEMORY TIMING PRESCALER                           */
  00B7          +1    67     sfr FLACL    =  0xB7;   /* FLASH ACESS LIMIT                                       */
  00B8          +1    68     sfr IP       =  0xB8;   /* INTERRUPT PRIORITY                                      */
  00B9          +1    69     sfr SADEN0   =  0xB9;   /* SERIAL PORT 0 SLAVE ADDRESS MASK                        */
  00BA          +1    70     sfr AMX0CF   =  0xBA;   /* ADC 0 MUX CONFIGURATION                                 */
  00BB          +1    71     sfr AMX0SL   =  0xBB;   /* ADC 0 MUX CHANNEL SELECTION                             */
  00BC          +1    72     sfr ADC0CF   =  0xBC;   /* ADC 0 CONFIGURATION                                     */
  00BD          +1    73     sfr P1MDIN   =  0xBD;   /* PORT 1 INPUT MODE                                       */
  00BE          +1    74     sfr ADC0L    =  0xBE;   /* ADC 0 DATA - LOW BYTE                                   */
  00BF          +1    75     sfr ADC0H    =  0xBF;   /* ADC 0 DATA - HIGH BYTE                                  */
  00C0          +1    76     sfr SMB0CN   =  0xC0;   /* SMBUS 0 CONTROL                                         */
  00C1          +1    77     sfr SMB0STA  =  0xC1;   /* SMBUS 0 STATUS                                          */
  00C2          +1    78     sfr SMB0DAT  =  0xC2;   /* SMBUS 0 DATA                                            */
  00C3          +1    79     sfr SMB0ADR  =  0xC3;   /* SMBUS 0 SLAVE ADDRESS                                   */
  00C4          +1    80     sfr ADC0GTL  =  0xC4;   /* ADC 0 GREATER-THAN REGISTER - LOW BYTE                  */
  00C5          +1    81     sfr ADC0GTH  =  0xC5;   /* ADC 0 GREATER-THAN REGISTER - HIGH BYTE                 */
  00C6          +1    82     sfr ADC0LTL  =  0xC6;   /* ADC 0 LESS-THAN REGISTER - LOW BYTE                     */
  00C7          +1    83     sfr ADC0LTH  =  0xC7;   /* ADC 0 LESS-THAN REGISTER - HIGH BYTE                    */
  00C8          +1    84     sfr T2CON    =  0xC8;   /* TIMER 2 CONTROL                                         */
  00C9          +1    85     sfr T4CON    =  0xC9;   /* TIMER 4 CONTROL                                         */
  00CA          +1    86     sfr RCAP2L   =  0xCA;   /* TIMER 2 CAPTURE REGISTER - LOW BYTE                     */
  00CB          +1    87     sfr RCAP2H   =  0xCB;   /* TIMER 2 CAPTURE REGISTER - HIGH BYTE                    */
  00CC          +1    88     sfr TL2      =  0xCC;   /* TIMER 2 - LOW BYTE                                      */
  00CD          +1    89     sfr TH2      =  0xCD;   /* TIMER 2 - HIGH BYTE                                     */
  00CF          +1    90     sfr SMB0CR   =  0xCF;   /* SMBUS 0 CLOCK RATE                                      */
  00D0          +1    91     sfr PSW      =  0xD0;   /* PROGRAM STATUS WORD                                     */
  00D1          +1    92     sfr REF0CN   =  0xD1;   /* VOLTAGE REFERENCE 0 CONTROL                             */
  00D2          +1    93     sfr DAC0L    =  0xD2;   /* DAC 0 REGISTER - LOW BYTE                               */
  00D3          +1    94     sfr DAC0H    =  0xD3;   /* DAC 0 REGISTER - HIGH BYTE                              */
  00D4          +1    95     sfr DAC0CN   =  0xD4;   /* DAC 0 CONTROL                                           */
  00D5          +1    96     sfr DAC1L    =  0xD5;   /* DAC 1 REGISTER - LOW BYTE                               */
  00D6          +1    97     sfr DAC1H    =  0xD6;   /* DAC 1 REGISTER - HIGH BYTE                              */
  00D7          +1    98     sfr DAC1CN   =  0xD7;   /* DAC 1 CONTROL                                           */
  00D8          +1    99     sfr PCA0CN   =  0xD8;   /* PCA 0 COUNTER CONTROL                                   */
  00D9          +1   100     sfr PCA0MD   =  0xD9;   /* PCA 0 COUNTER MODE                                      */
  00DA          +1   101     sfr PCA0CPM0 =  0xDA;   /* CONTROL REGISTER FOR PCA 0 MODULE 0                     */
  00DB          +1   102     sfr PCA0CPM1 =  0xDB;   /* CONTROL REGISTER FOR PCA 0 MODULE 1                     */
  00DC          +1   103     sfr PCA0CPM2 =  0xDC;   /* CONTROL REGISTER FOR PCA 0 MODULE 2                     */
  00DD          +1   104     sfr PCA0CPM3 =  0xDD;   /* CONTROL REGISTER FOR PCA 0 MODULE 3                     */
  00DE          +1   105     sfr PCA0CPM4 =  0xDE;   /* CONTROL REGISTER FOR PCA 0 MODULE 4                     */
  00E0          +1   106     sfr ACC      =  0xE0;   /* ACCUMULATOR                                             */
  00E1          +1   107     sfr XBR0     =  0xE1;   /* DIGITAL CROSSBAR CONFIGURATION REGISTER 0               */
  00E2          +1   108     sfr XBR1     =  0xE2;   /* DIGITAL CROSSBAR CONFIGURATION REGISTER 1               */
  00E3          +1   109     sfr XBR2     =  0xE3;   /* DIGITAL CROSSBAR CONFIGURATION REGISTER 2               */
  00E4          +1   110     sfr RCAP4L   =  0xE4;   /* TIMER 4 CAPTURE REGISTER - LOW BYTE                     */
  00E5          +1   111     sfr RCAP4H   =  0xE5;   /* TIMER 4 CAPTURE REGISTER - HIGH BYTE                    */
  00E6          +1   112     sfr EIE1     =  0xE6;   /* EXTERNAL INTERRUPT ENABLE 1                             */
  00E7          +1   113     sfr EIE2     =  0xE7;   /* EXTERNAL INTERRUPT ENABLE 2                             */
  00E8          +1   114     sfr ADC0CN   =  0xE8;   /* ADC 0 CONTROL                                           */   
  00E9          +1   115     sfr PCA0L    =  0xE9;   /* PCA 0 TIMER - LOW BYTE                                  */   
  00EA          +1   116     sfr PCA0CPL0 =   0xEA;   /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 0 - LOW BYTE  */
  00EB          +1   117     sfr PCA0CPL1 =   0xEB;   /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 1 - LOW BYTE  */
  00EC          +1   118     sfr PCA0CPL2 =   0xEC;   /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 2 - LOW BYTE  */
  00ED          +1   119     sfr PCA0CPL3 =   0xED;   /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 3 - LOW BYTE  */
  00EE          +1   120     sfr PCA0CPL4 =   0xEE;   /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 4 - LOW BYTE  */
A51 MACRO ASSEMBLER  TIMER                                                                10/26/2018 09:55:47 PAGE     3

  00EF          +1   121     sfr RSTSRC   =   0xEF;   /* RESET SOURCE                                            */
  00F0          +1   122     sfr B        =   0xF0;   /* B REGISTER                                              */
  00F1          +1   123     sfr SCON1    =  0xF1;   /* SERIAL PORT 1 CONTROL                                   */
  00F2          +1   124     sfr SBUF1    =  0xF2;   /* SERAIL PORT 1 DATA                                      */
  00F3          +1   125     sfr SADDR1   =  0xF3;   /* SERAIL PORT 1                                           */ 
  00F4          +1   126     sfr TL4      =  0xF4;   /* TIMER 4 DATA - LOW BYTE                                 */
  00F5          +1   127     sfr TH4      =  0xF5;   /* TIMER 4 DATA - HIGH BYTE                                */
  00F6          +1   128     sfr EIP1     =   0xF6;   /* EXTERNAL INTERRUPT PRIORITY REGISTER 1                  */
  00F7          +1   129     sfr EIP2     =   0xF7;   /* EXTERNAL INTERRUPT PRIORITY REGISTER 2                  */
  00F8          +1   130     sfr SPI0CN   =   0xF8;   /* SERIAL PERIPHERAL INTERFACE 0 CONTROL                   */  
  00F9          +1   131     sfr PCA0H    =   0xF9;          /* PCA 0 TIMER - HIGH BYTE                                 
                             */
  00FA          +1   132     sfr PCA0CPH0 =   0xFA;          /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 0 - HIGH BYTE 
                             */
  00FB          +1   133     sfr PCA0CPH1 =   0xFB;          /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 1 - HIGH BYTE 
                             */
  00FC          +1   134     sfr PCA0CPH2 =   0xFC;          /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 2 - HIGH BYTE 
                             */
  00FD          +1   135     sfr PCA0CPH3 =   0xFD;          /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 3 - HIGH BYTE 
                             */
  00FE          +1   136     sfr PCA0CPH4 =   0xFE;          /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 4 - HIGH BYTE 
                             */   
  00FF          +1   137     sfr WDTCN    =   0xFF;          /* WATCHDOG TIMER CONTROL                                  
                             */
                +1   138             
                +1   139     
                +1   140     
                +1   141     
                +1   142     
  008F          +1   143     sbit TF1   = TCON ^ 7;              /* TIMER 1 OVERFLOW FLAG      */
  008E          +1   144     sbit TR1   = TCON ^ 6;              /* TIMER 1 ON/OFF CONTROL     */
  008D          +1   145     sbit TF0   = TCON ^ 5;              /* TIMER 0 OVERFLOW FLAG      */
  008C          +1   146     sbit TR0   = TCON ^ 4;              /* TIMER 0 ON/OFF CONTROL     */
  008B          +1   147     sbit IE1   = TCON ^ 3;              /* EXT. INTERRUPT 1 EDGE FLAG */
  008A          +1   148     sbit IT1   = TCON ^ 2;              /* EXT. INTERRUPT 1 TYPE      */
  0089          +1   149     sbit IE0   = TCON ^ 1;              /* EXT. INTERRUPT 0 EDGE FLAG */
  0088          +1   150     sbit IT0   = TCON ^ 0;              /* EXT. INTERRUPT 0 TYPE      */
                +1   151     
                +1   152     
  009F          +1   153     sbit SM00  = SCON0 ^ 7;             /* SERIAL MODE CONTROL BIT 0           */   
  009E          +1   154     sbit SM10  = SCON0 ^ 6;             /* SERIAL MODE CONTROL BIT 1           */
  009D          +1   155     sbit SM20  = SCON0 ^ 5;             /* MULTIPROCESSOR COMMUNICATION ENABLE */
  009C          +1   156     sbit REN0  = SCON0 ^ 4;             /* RECEIVE ENABLE                      */
  009B          +1   157     sbit TB80  = SCON0 ^ 3;             /* TRANSMIT BIT 8                      */
  009A          +1   158     sbit RB80  = SCON0 ^ 2;             /* RECEIVE BIT 8                       */
  0099          +1   159     sbit TI0   = SCON0 ^ 1;             /* TRANSMIT INTERRUPT FLAG             */
  0098          +1   160     sbit RI0   = SCON0 ^ 0;             /* RECEIVE INTERRUPT FLAG              */
                +1   161     
                +1   162     
  00AF          +1   163     sbit EA    = IE ^ 7;                /* GLOBAL INTERRUPT ENABLE      */  
  00AD          +1   164     sbit ET2   = IE ^ 5;                /* TIMER 2 INTERRUPT ENABLE     */
  00AC          +1   165     sbit ES0   = IE ^ 4;                /* UART0 INTERRUPT ENABLE       */
  00AB          +1   166     sbit ET1   = IE ^ 3;                /* TIMER 1 INTERRUPT ENABLE     */
  00AA          +1   167     sbit EX1   = IE ^ 2;                /* EXTERNAL INTERRUPT 1 ENABLE  */
  00A9          +1   168     sbit ET0   = IE ^ 1;                /* TIMER 0 INTERRUPT ENABLE     */
  00A8          +1   169     sbit EX0   = IE ^ 0;                /* EXTERNAL INTERRUPT 0 ENABLE  */
                +1   170     
                +1   171     
  00BD          +1   172     sbit PT2   = IP ^ 5;                /* TIMER 2 PRIORITY                                 */ 
                                  
  00BC          +1   173     sbit PS    = IP ^ 4;                /* SERIAL PORT PRIORITY                             */
  00BB          +1   174     sbit PT1   = IP ^ 3;                /* TIMER 1 PRIORITY                                 */
  00BA          +1   175     sbit PX1   = IP ^ 2;                /* EXTERNAL INTERRUPT 1 PRIORITY    */
  00B9          +1   176     sbit PT0   = IP ^ 1;                /* TIMER 0 PRIORITY                                 */
  00B8          +1   177     sbit PX0   = IP ^ 0;                /* EXTERNAL INTERRUPT 0 PRIORITY    */              
                +1   178     
A51 MACRO ASSEMBLER  TIMER                                                                10/26/2018 09:55:47 PAGE     4

                +1   179     
  00C7          +1   180     sbit BUSY     =   SMB0CN ^ 7;       /* SMBUS 0 BUSY                    */
  00C6          +1   181     sbit ENSMB    =   SMB0CN ^ 6;       /* SMBUS 0 ENABLE                  */
  00C5          +1   182     sbit STA      =   SMB0CN ^ 5;       /* SMBUS 0 START FLAG              */
  00C4          +1   183     sbit STO      =   SMB0CN ^ 4;       /* SMBUS 0 STOP FLAG               */
  00C3          +1   184     sbit SI       =   SMB0CN ^ 3;       /* SMBUS 0 INTERRUPT PENDING FLAG  */
  00C2          +1   185     sbit AA       =   SMB0CN ^ 2;       /* SMBUS 0 ASSERT/ACKNOWLEDGE FLAG */
  00C1          +1   186     sbit SMBFTE   =   SMB0CN ^ 1;       /* SMBUS 0 FREE TIMER ENABLE       */
  00C0          +1   187     sbit SMBTOE   =   SMB0CN ^ 0;       /* SMBUS 0 TIMEOUT ENABLE          */
                +1   188     
                +1   189     
  00CF          +1   190     sbit TF2   = T2CON ^ 7;             /* TIMER 2 OVERFLOW FLAG        */
  00CE          +1   191     sbit EXF2  = T2CON ^ 6;             /* EXTERNAL FLAG                */
  00CD          +1   192     sbit RCLK0 = T2CON ^ 5;             /* UART0 RX CLOCK SOURCE        */
  00CC          +1   193     sbit TCLK0 = T2CON ^ 4;             /* UART0 TX CLOCK SOURCE        */
  00CB          +1   194     sbit EXEN2 = T2CON ^ 3;             /* TIMER 2 EXTERNAL ENABLE FLAG */  
  00CA          +1   195     sbit TR2   = T2CON ^ 2;             /* TIMER 2 ON/OFF CONTROL       */
  00C9          +1   196     sbit CT2   = T2CON ^ 1;             /* TIMER OR COUNTER SELECT      */
  00C8          +1   197     sbit CPRL2 = T2CON ^ 0;             /* CAPTURE OR RELOAD SELECT     */
                +1   198     
                +1   199     
  00D7          +1   200     sbit CY    = PSW ^ 7;               /* CARRY FLAG              */       
  00D6          +1   201     sbit AC    = PSW ^ 6;               /* AUXILIARY CARRY FLAG    */
  00D5          +1   202     sbit F0    = PSW ^ 5;               /* USER FLAG 0             */
  00D4          +1   203     sbit RS1   = PSW ^ 4;               /* REGISTER BANK SELECT 1  */
  00D3          +1   204     sbit RS0   = PSW ^ 3;               /* REGISTER BANK SELECT 0  */
  00D2          +1   205     sbit OV    = PSW ^ 2;               /* OVERFLOW FLAG           */
  00D1          +1   206     sbit F1    = PSW ^ 1;               /* USER FLAG 1             */
  00D0          +1   207     sbit P     = PSW ^ 0;               /* ACCUMULATOR PARITY FLAG */
                +1   208     
                +1   209     
  00DF          +1   210     sbit CF    =   PCA0CN ^ 7;          /* PCA 0 COUNTER OVERFLOW FLAG   */
  00DE          +1   211     sbit CR    =   PCA0CN ^ 6;          /* PCA 0 COUNTER RUN CONTROL BIT */
  00DC          +1   212     sbit CCF4  =   PCA0CN ^ 4;          /* PCA 0 MODULE 4 INTERRUPT FLAG */
  00DB          +1   213     sbit CCF3  =   PCA0CN ^ 3;          /* PCA 0 MODULE 3 INTERRUPT FLAG */
  00DA          +1   214     sbit CCF2  =   PCA0CN ^ 2;          /* PCA 0 MODULE 2 INTERRUPT FLAG */
  00D9          +1   215     sbit CCF1  =   PCA0CN ^ 1;          /* PCA 0 MODULE 1 INTERRUPT FLAG */
  00D8          +1   216     sbit CCF0  =   PCA0CN ^ 0;          /* PCA 0 MODULE 0 INTERRUPT FLAG */
                +1   217     
                +1   218     
  00EF          +1   219     sbit AD0EN     =   ADC0CN ^ 7;      /* ADC 0 ENABLE                              */
  00EE          +1   220     sbit AD0TM     =   ADC0CN ^ 6;      /* ADC 0 TRACK MODE                          */
  00ED          +1   221     sbit AD0INT    =   ADC0CN ^ 5;      /* ADC 0 CONVERISION COMPLETE INTERRUPT FLAG */
  00EC          +1   222     sbit AD0BUSY   =   ADC0CN ^ 4;      /* ADC 0 BUSY FLAG                           */
  00EB          +1   223     sbit AD0CM1    =   ADC0CN ^ 3;      /* ADC 0 START OF CONVERSION MODE BIT 1      */
  00EA          +1   224     sbit AD0CM0    =   ADC0CN ^ 2;      /* ADC 0 START OF CONVERSION MODE BIT 0      */
  00E9          +1   225     sbit AD0WINT   =   ADC0CN ^ 1;      /* ADC 0 WINDOW COMPARE INTERRUPT FLAG       */
  00E8          +1   226     sbit AD0LJST   =   ADC0CN ^ 0;      /* ADC 0 RIGHT JUSTIFY DATA BIT              */
                +1   227     
                +1   228     
  00FF          +1   229     sbit SPIF     =   SPI0CN ^ 7;       /* SPI 0 INTERRUPT FLAG                     */
  00FE          +1   230     sbit WCOL     =   SPI0CN ^ 6;       /* SPI 0 WRITE COLLISION FLAG       */
  00FD          +1   231     sbit MODF     =   SPI0CN ^ 5;       /* SPI 0 MODE FAULT FLAG            */
  00FC          +1   232     sbit RXOVRN   =   SPI0CN ^ 4;       /* SPI 0 RX OVERRUN FLAG            */
  00FB          +1   233     sbit TXBSY    =   SPI0CN ^ 3;       /* SPI 0 TX BUSY FLAG                       */
  00FA          +1   234     sbit SLVSEL   =   SPI0CN ^ 2;       /* SPI 0 SLAVE SELECT                       */
  00F9          +1   235     sbit MSTEN    =   SPI0CN ^ 1;       /* SPI 0 MASTER ENABLE                      */
  00F8          +1   236     sbit SPIEN    =   SPI0CN ^ 0;       /* SPI 0 SPI ENABLE                         */         
                                          
                     237     
                     238     
                     239     
                     240     
                     241     
                     242     
                     243     
A51 MACRO ASSEMBLER  TIMER                                                                10/26/2018 09:55:47 PAGE     5

                     244     
                     245      
                     246     
                     247     PUBLIC  INIT_1_SEC_TIMER
                     248     PUBLIC  TIMER2_ISR
                     249     
                     250     
                     251     
                     252     
                     253     
                     254                     TIMER_CODE      SEGMENT         CODE
----                 255     RSEG    TIMER_CODE    ; making this code segment relocatable
                     256     
                     257     
                     258     
                     259     
                     260     
                     261     
                     262     
                     263     
  0001               264     CKCON_REG_VAL   EQU 001h  ; Value to set timers to use sysclk/12 = 22.11/12MHz = 1,843,200Hz
  002C               265     ISR_N                   EQU 44    ; The number of ISRs to count to get to 1 second.
  005C               266     RCAP2H_VAL              EQU 05Ch
  006D               267     RCAP2L_VAL      EQU 06Dh
                     268     ;RCAP2H_VAL       EQU 01fh
                     269     ;RCAP2L_VAL    EQU 000h
                     270     
0000                 271     INIT_1_SEC_TIMER:
                     272             ; Configure Timer 2 for 1 sec period operation with an interupt each time.
                     273             ; I'm using timer 2 as it supports 16-bit timer mode with auto-reload (mode 1)
                     274     
                     275             ; Set clock and mode for the timers
0000 758E01          276             MOV     CKCON , #CKCON_REG_VAL
0003 75C804          277             MOV     T2CON , #04h  ; Mode = 1 = 16 bit timer / counter
                     278     
                     279             ; Program the reload registers so as to get a frequency of 1/32 sec
0006 75CB5C          280             MOV     RCAP2H , #RCAP2H_VAL;
0009 75CA6D          281             MOV     RCAP2L , #RCAP2L_VAL;
                     282     
                     283             
000C D2AD            284             SETB ET2
000E D2AF            285             SETB EA   ;  Global interrupt enable
                     286     
                     287     
0010 AF00            288             MOV R7, 0  ; Initialize a counter used in the ISR
                     289     
                     290     
0012 D2CA            291             SETB TR2  ; Enable timer 2
                     292     
0014 22              293             RET
                     294     
                     295     
                     296     
                     297     
                     298     
                     299     
                     300     
                     301     
0015                 302     TIMER2_ISR:
0015 EF              303             MOV  A, R7
0016 04              304             INC  A
0017 FF              305             MOV  R7, A
0018 B42C0A          306             CJNE A, #ISR_N, EXIT_TIMER2_ISR  ; Only increment LEDs every ISR_N times
001B 7F00            307             MOV  R7, #00h  ; Clear counter (wrapping)
                     308             
                     309             ; Increment value on LEDs by 1. The LEDs are in the MS nibble of port 5
A51 MACRO ASSEMBLER  TIMER                                                                10/26/2018 09:55:47 PAGE     6

001D E585            310             MOV             A  , P5         ; start of read/modify/write operation
001F 2410            311             ADD     A  , #010h  ; steps MS nibble by 1 each time
0021 54F0            312             ANL             A  , #0F0h  ; clears LS nibble
0023 F585            313             MOV             P5 , A          ; write back to port 5 - end of read/modift/write o
                             peration
                     314             
0025                 315             EXIT_TIMER2_ISR:
0025 C2CF            316             CLR             TF2         ; Very important. Clear interrupt flag
                     317     
0027 32              318             RETI
                     319     
                     320     
                     321     END
A51 MACRO ASSEMBLER  TIMER                                                                10/26/2018 09:55:47 PAGE     7

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AA . . . . . . . .  B ADDR   00C0H.2 A   
AC . . . . . . . .  B ADDR   00D0H.6 A   
ACC. . . . . . . .  D ADDR   00E0H   A   
AD0BUSY. . . . . .  B ADDR   00E8H.4 A   
AD0CM0 . . . . . .  B ADDR   00E8H.2 A   
AD0CM1 . . . . . .  B ADDR   00E8H.3 A   
AD0EN. . . . . . .  B ADDR   00E8H.7 A   
AD0INT . . . . . .  B ADDR   00E8H.5 A   
AD0LJST. . . . . .  B ADDR   00E8H.0 A   
AD0TM. . . . . . .  B ADDR   00E8H.6 A   
AD0WINT. . . . . .  B ADDR   00E8H.1 A   
ADC0CF . . . . . .  D ADDR   00BCH   A   
ADC0CN . . . . . .  D ADDR   00E8H   A   
ADC0GTH. . . . . .  D ADDR   00C5H   A   
ADC0GTL. . . . . .  D ADDR   00C4H   A   
ADC0H. . . . . . .  D ADDR   00BFH   A   
ADC0L. . . . . . .  D ADDR   00BEH   A   
ADC0LTH. . . . . .  D ADDR   00C7H   A   
ADC0LTL. . . . . .  D ADDR   00C6H   A   
ADC1 . . . . . . .  D ADDR   009CH   A   
ADC1CF . . . . . .  D ADDR   00ABH   A   
ADC1CN . . . . . .  D ADDR   00AAH   A   
AMX0CF . . . . . .  D ADDR   00BAH   A   
AMX0SL . . . . . .  D ADDR   00BBH   A   
AMX1SL . . . . . .  D ADDR   00ACH   A   
B. . . . . . . . .  D ADDR   00F0H   A   
BUSY . . . . . . .  B ADDR   00C0H.7 A   
CCF0 . . . . . . .  B ADDR   00D8H.0 A   
CCF1 . . . . . . .  B ADDR   00D8H.1 A   
CCF2 . . . . . . .  B ADDR   00D8H.2 A   
CCF3 . . . . . . .  B ADDR   00D8H.3 A   
CCF4 . . . . . . .  B ADDR   00D8H.4 A   
CF . . . . . . . .  B ADDR   00D8H.7 A   
CKCON. . . . . . .  D ADDR   008EH   A   
CKCON_REG_VAL. . .  N NUMB   0001H   A   
CPRL2. . . . . . .  B ADDR   00C8H.0 A   
CPT0CN . . . . . .  D ADDR   009EH   A   
CPT1CN . . . . . .  D ADDR   009FH   A   
CR . . . . . . . .  B ADDR   00D8H.6 A   
CT2. . . . . . . .  B ADDR   00C8H.1 A   
CY . . . . . . . .  B ADDR   00D0H.7 A   
DAC0CN . . . . . .  D ADDR   00D4H   A   
DAC0H. . . . . . .  D ADDR   00D3H   A   
DAC0L. . . . . . .  D ADDR   00D2H   A   
DAC1CN . . . . . .  D ADDR   00D7H   A   
DAC1H. . . . . . .  D ADDR   00D6H   A   
DAC1L. . . . . . .  D ADDR   00D5H   A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
EA . . . . . . . .  B ADDR   00A8H.7 A   
EIE1 . . . . . . .  D ADDR   00E6H   A   
EIE2 . . . . . . .  D ADDR   00E7H   A   
EIP1 . . . . . . .  D ADDR   00F6H   A   
EIP2 . . . . . . .  D ADDR   00F7H   A   
EMI0CF . . . . . .  D ADDR   00A3H   A   
EMI0CN . . . . . .  D ADDR   00AFH   A   
EMI0TC . . . . . .  D ADDR   00A1H   A   
ENSMB. . . . . . .  B ADDR   00C0H.6 A   
ES0. . . . . . . .  B ADDR   00A8H.4 A   
ET0. . . . . . . .  B ADDR   00A8H.1 A   
A51 MACRO ASSEMBLER  TIMER                                                                10/26/2018 09:55:47 PAGE     8

ET1. . . . . . . .  B ADDR   00A8H.3 A   
ET2. . . . . . . .  B ADDR   00A8H.5 A   
EX0. . . . . . . .  B ADDR   00A8H.0 A   
EX1. . . . . . . .  B ADDR   00A8H.2 A   
EXEN2. . . . . . .  B ADDR   00C8H.3 A   
EXF2 . . . . . . .  B ADDR   00C8H.6 A   
EXIT_TIMER2_ISR. .  C ADDR   0025H   R   SEG=TIMER_CODE
F0 . . . . . . . .  B ADDR   00D0H.5 A   
F1 . . . . . . . .  B ADDR   00D0H.1 A   
FLACL. . . . . . .  D ADDR   00B7H   A   
FLSCL. . . . . . .  D ADDR   00B6H   A   
IE . . . . . . . .  D ADDR   00A8H   A   
IE0. . . . . . . .  B ADDR   0088H.1 A   
IE1. . . . . . . .  B ADDR   0088H.3 A   
INIT_1_SEC_TIMER .  C ADDR   0000H   R   SEG=TIMER_CODE
IP . . . . . . . .  D ADDR   00B8H   A   
ISR_N. . . . . . .  N NUMB   002CH   A   
IT0. . . . . . . .  B ADDR   0088H.0 A   
IT1. . . . . . . .  B ADDR   0088H.2 A   
MODF . . . . . . .  B ADDR   00F8H.5 A   
MSTEN. . . . . . .  B ADDR   00F8H.1 A   
OSCICN . . . . . .  D ADDR   00B2H   A   
OSCXCN . . . . . .  D ADDR   00B1H   A   
OV . . . . . . . .  B ADDR   00D0H.2 A   
P. . . . . . . . .  B ADDR   00D0H.0 A   
P0 . . . . . . . .  D ADDR   0080H   A   
P0MDOUT. . . . . .  D ADDR   00A4H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P1MDIN . . . . . .  D ADDR   00BDH   A   
P1MDOUT. . . . . .  D ADDR   00A5H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P2MDOUT. . . . . .  D ADDR   00A6H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
P3IF . . . . . . .  D ADDR   00ADH   A   
P3MDOUT. . . . . .  D ADDR   00A7H   A   
P4 . . . . . . . .  D ADDR   0084H   A   
P5 . . . . . . . .  D ADDR   0085H   A   
P6 . . . . . . . .  D ADDR   0086H   A   
P7 . . . . . . . .  D ADDR   0096H   A   
P74OUT . . . . . .  D ADDR   00B5H   A   
PCA0CN . . . . . .  D ADDR   00D8H   A   
PCA0CPH0 . . . . .  D ADDR   00FAH   A   
PCA0CPH1 . . . . .  D ADDR   00FBH   A   
PCA0CPH2 . . . . .  D ADDR   00FCH   A   
PCA0CPH3 . . . . .  D ADDR   00FDH   A   
PCA0CPH4 . . . . .  D ADDR   00FEH   A   
PCA0CPL0 . . . . .  D ADDR   00EAH   A   
PCA0CPL1 . . . . .  D ADDR   00EBH   A   
PCA0CPL2 . . . . .  D ADDR   00ECH   A   
PCA0CPL3 . . . . .  D ADDR   00EDH   A   
PCA0CPL4 . . . . .  D ADDR   00EEH   A   
PCA0CPM0 . . . . .  D ADDR   00DAH   A   
PCA0CPM1 . . . . .  D ADDR   00DBH   A   
PCA0CPM2 . . . . .  D ADDR   00DCH   A   
PCA0CPM3 . . . . .  D ADDR   00DDH   A   
PCA0CPM4 . . . . .  D ADDR   00DEH   A   
PCA0H. . . . . . .  D ADDR   00F9H   A   
PCA0L. . . . . . .  D ADDR   00E9H   A   
PCA0MD . . . . . .  D ADDR   00D9H   A   
PCON . . . . . . .  D ADDR   0087H   A   
PS . . . . . . . .  B ADDR   00B8H.4 A   
PSCTL. . . . . . .  D ADDR   008FH   A   
PSW. . . . . . . .  D ADDR   00D0H   A   
PT0. . . . . . . .  B ADDR   00B8H.1 A   
PT1. . . . . . . .  B ADDR   00B8H.3 A   
PT2. . . . . . . .  B ADDR   00B8H.5 A   
A51 MACRO ASSEMBLER  TIMER                                                                10/26/2018 09:55:47 PAGE     9

PX0. . . . . . . .  B ADDR   00B8H.0 A   
PX1. . . . . . . .  B ADDR   00B8H.2 A   
RB80 . . . . . . .  B ADDR   0098H.2 A   
RCAP2H . . . . . .  D ADDR   00CBH   A   
RCAP2H_VAL . . . .  N NUMB   005CH   A   
RCAP2L . . . . . .  D ADDR   00CAH   A   
RCAP2L_VAL . . . .  N NUMB   006DH   A   
RCAP4H . . . . . .  D ADDR   00E5H   A   
RCAP4L . . . . . .  D ADDR   00E4H   A   
RCLK0. . . . . . .  B ADDR   00C8H.5 A   
REF0CN . . . . . .  D ADDR   00D1H   A   
REN0 . . . . . . .  B ADDR   0098H.4 A   
RI0. . . . . . . .  B ADDR   0098H.0 A   
RS0. . . . . . . .  B ADDR   00D0H.3 A   
RS1. . . . . . . .  B ADDR   00D0H.4 A   
RSTSRC . . . . . .  D ADDR   00EFH   A   
RXOVRN . . . . . .  B ADDR   00F8H.4 A   
SADDR0 . . . . . .  D ADDR   00A9H   A   
SADDR1 . . . . . .  D ADDR   00F3H   A   
SADEN0 . . . . . .  D ADDR   00B9H   A   
SADEN1 . . . . . .  D ADDR   00AEH   A   
SBUF0. . . . . . .  D ADDR   0099H   A   
SBUF1. . . . . . .  D ADDR   00F2H   A   
SCON0. . . . . . .  D ADDR   0098H   A   
SCON1. . . . . . .  D ADDR   00F1H   A   
SI . . . . . . . .  B ADDR   00C0H.3 A   
SLVSEL . . . . . .  B ADDR   00F8H.2 A   
SM00 . . . . . . .  B ADDR   0098H.7 A   
SM10 . . . . . . .  B ADDR   0098H.6 A   
SM20 . . . . . . .  B ADDR   0098H.5 A   
SMB0ADR. . . . . .  D ADDR   00C3H   A   
SMB0CN . . . . . .  D ADDR   00C0H   A   
SMB0CR . . . . . .  D ADDR   00CFH   A   
SMB0DAT. . . . . .  D ADDR   00C2H   A   
SMB0STA. . . . . .  D ADDR   00C1H   A   
SMBFTE . . . . . .  B ADDR   00C0H.1 A   
SMBTOE . . . . . .  B ADDR   00C0H.0 A   
SP . . . . . . . .  D ADDR   0081H   A   
SPI0CFG. . . . . .  D ADDR   009AH   A   
SPI0CKR. . . . . .  D ADDR   009DH   A   
SPI0CN . . . . . .  D ADDR   00F8H   A   
SPI0DAT. . . . . .  D ADDR   009BH   A   
SPIEN. . . . . . .  B ADDR   00F8H.0 A   
SPIF . . . . . . .  B ADDR   00F8H.7 A   
STA. . . . . . . .  B ADDR   00C0H.5 A   
STO. . . . . . . .  B ADDR   00C0H.4 A   
T2CON. . . . . . .  D ADDR   00C8H   A   
T4CON. . . . . . .  D ADDR   00C9H   A   
TB80 . . . . . . .  B ADDR   0098H.3 A   
TCLK0. . . . . . .  B ADDR   00C8H.4 A   
TCON . . . . . . .  D ADDR   0088H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . .  B ADDR   0088H.7 A   
TF2. . . . . . . .  B ADDR   00C8H.7 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TH2. . . . . . . .  D ADDR   00CDH   A   
TH4. . . . . . . .  D ADDR   00F5H   A   
TI0. . . . . . . .  B ADDR   0098H.1 A   
TIMER2_ISR . . . .  C ADDR   0015H   R   SEG=TIMER_CODE
TIMER_CODE . . . .  C SEG    0028H       REL=UNIT
TL0. . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . .  D ADDR   008BH   A   
TL2. . . . . . . .  D ADDR   00CCH   A   
TL4. . . . . . . .  D ADDR   00F4H   A   
TMOD . . . . . . .  D ADDR   0089H   A   
A51 MACRO ASSEMBLER  TIMER                                                                10/26/2018 09:55:47 PAGE    10

TMR3CN . . . . . .  D ADDR   0091H   A   
TMR3H. . . . . . .  D ADDR   0095H   A   
TMR3L. . . . . . .  D ADDR   0094H   A   
TMR3RLH. . . . . .  D ADDR   0093H   A   
TMR3RLL. . . . . .  D ADDR   0092H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   
TR2. . . . . . . .  B ADDR   00C8H.2 A   
TXBSY. . . . . . .  B ADDR   00F8H.3 A   
WCOL . . . . . . .  B ADDR   00F8H.6 A   
WDTCN. . . . . . .  D ADDR   00FFH   A   
XBR0 . . . . . . .  D ADDR   00E1H   A   
XBR1 . . . . . . .  D ADDR   00E2H   A   
XBR2 . . . . . . .  D ADDR   00E3H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
